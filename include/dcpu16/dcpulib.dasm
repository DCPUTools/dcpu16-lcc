:__dispptr
DAT 0x8000
:__isprintf
DAT 0x0000
;
;extern int printf( const char*, ... );
;
:_global_printf
SET [_scratch0], POP
SET PUSH, C
SET PUSH, B
SET [_scratch1], Z
SET Z, SP
SET PUSH, X
SET PUSH, Y
SET X, 0
SET Y, A
:__printf_loop
IFE [Y], 0
SET PC, __printf_done
IFN [Y], 37 ;%
SET PC, __printf_putc
IFE [1+Y], 37 ;%
SET PC, __printf_putpct
IFE [1+Y], 99 ;c
SET PC, __printf_putc2
IFE [1+Y], 115 ;s
SET PC, __printf_puts
IFE [1+Y], 100 ;d
SET PC, __printf_putd
IFE [1+Y], 117 ;u
SET PC, __printf_putu
IFE [1+Y], 102 ;f
SET PC, __printf_putf
IFE [1+Y], 112 ;p
SET PC, __printf_putx
IFE [1+Y], 120 ;x
SET PC, __printf_putx
SET PC, __printf_putc
:__printf_putpct
ADD Y, 1
IFE [Y], 0
SET PC, __printf_done
SET PC, __printf_putc
:__printf_putc2
ADD Y, 2
SET A, [Z]
BOR A, 0xF000
ADD Z, 1
JSR _global_putchar
ADD X, 1
SET PC, __printf_loop
:__printf_puts
ADD Y, 2
SET A, [Z]
ADD Z, 1
SET [__isprintf], 1
JSR _global_puts
ADD X, A
SET PC, __printf_loop
:__printf_putd
ADD Y, 2
SET A, [Z]
SET B, _scratch4
SET C, 10
ADD Z, 1
JSR _global_itoa
SET A, _scratch4
SET [__isprintf], 1
JSR _global_puts
ADD X, A
SET PC, __printf_loop
:__printf_putu
ADD Y, 2
SET A, [Z]
SET B, _scratch4
SET C, 10
ADD Z, 1
JSR _global_utoa
SET A, _scratch4
SET [__isprintf], 1
JSR _global_puts
ADD X, A
SET PC, __printf_loop
:__printf_putf
ADD Y, 2
SET A, [Z]
SET B, _scratch4
ADD Z, 1
JSR _global_ftoa
SET A, _scratch4
SET [__isprintf], 1
JSR _global_puts
ADD X, A
SET PC, __printf_loop
:__printf_putx
ADD Y, 2
SET A, [Z]
SET B, _scratch4
SET C, 16
ADD Z, 1
JSR _global_utoa
SET A, _scratch4
SET [__isprintf], 1
JSR _global_puts
ADD X, A
SET PC, __printf_loop
:__printf_putc
SET A, [Y]
BOR A, 0xF000
JSR _global_putchar
ADD X, 1
ADD Y, 1
SET PC, __printf_loop
:__printf_done
SET A, X
SET Z, [_scratch1]
SET Y, POP
SET X, POP
SET POP, POP
SET PC, [_scratch0]
;
;extern unsigned putchar( unsigned );
;
:_global_putchar
SET B, [__dispptr]
SET C, A
AND C, 0x007F
IFN C, 0x000A
SET PC, __putchar_cont
JSR __newline
SET [__dispptr], B
SET PC, POP
:__putchar_cont
SET [B], A
ADD B, 1
IFG B, 0x817F
SET B, 0x8000
SET [__dispptr], B
SET PC, POP
;
;extern int puts( const char* );
;
:_global_puts
SET B, [__dispptr]
SET C, 0
:__puts_loop
IFN [A], 0x000A ;'\n'
SET PC, __puts_std
JSR __newline
SET PC, __puts_cont
ADD A, 1
:__puts_std
SET [B], [A]
BOR [B], 0xF000
ADD B, 1
:__puts_cont
IFG B, 0x817F
SET B, 0x8000
ADD A, 1
ADD C, 1
IFN [A], 0
SET PC, __puts_loop
:__puts_done
IFN [__isprintf], 0
SET PC, __puts_cont2
JSR __newline               ;newline at the end
ADD C, 1
:__puts_cont2
SET [__isprintf], 0
SET A, C
SET [__dispptr], B
SET PC, POP
:__newline
SET I, B
MOD I, 0x0020
IFE I, 0
SET PC, __newline_done
SET [B], 0
ADD B, 1
SET PC, __newline
:__newline_done
IFG B, 0x817F
SET B, 0x8000
SET PC, POP
;
;extern char* itoa( int, char*, int );
;
:_global_itoa
SET PUSH, B
IFG 0x7FFE, A
SET PC, __itoa_cont
SET [B], 45
ADD B, 1
SET I, 0
SUB I, A
SET A, I
:__itoa_cont
JSR _global_utoa
SET A, POP
SET PC, POP
;
;extern char* ftoa( float, char* );
;
:_global_ftoa
SET C, 10
SET PUSH, B
SET PUSH, A
IFG 0x7FFE, A
SET PC, __ftoa_cont
SET [B], 45
ADD B, 1
SET I, 0
SUB I, A
SET A, I
SET PEEK, A
:__ftoa_cont
SHR A, 8
JSR _global_utoa
SET A, POP
AND A, 0x00FF
IFE A, 0
SET PC, __ftoa_done
SET [B], 46
ADD B, 1
MUL A, 100
DIV A, 256
IFG O, 128
ADD A, 1
JSR _global_utoa
:__ftoa_done
SET A, POP
SET PC, POP
;
;extern char* utoa( unsigned, char*, int );
;
:_global_utoa
IFG 2, C
SET C, 10
IFG C, 16
SET C, 10
SET PUSH, X
SET PUSH, Z
SET X, B
:__itoa_loop
SET I, A
MOD I, C
ADD I, 48
IFG I, 57
ADD I, 39
SET [B], I
ADD B, 1
DIV A, C
IFN A, 0
SET PC, __itoa_loop
SET PUSH, B
SET [B], 0
SUB B, 1
SET A, X
SET Z, B
SUB Z, X
SHR Z, 1
ADD Z, 1
ADD Z, X
:__itoa_loop2
SET C, [A]
SET [A], [B]
SET [B], C
ADD A, 1
SUB B, 1
IFN A, Z
SET PC, __itoa_loop2
SET A, X
SET B, POP
SET Z, POP
SET X, POP
SET PC, POP
;
;extern unsigned* getdispcur();
;
:_global_getdispcur
SET A, [__dispptr]
SET PC, POP
;
;extern unsigned* setdispcur(unsigned*);
;
:_global_setdispcur
IFG A, 0x817F
SET A, 0x817F
IFG 0x8000, A
SET A, 0x8000
SET [__dispptr], A
SET PC, POP

